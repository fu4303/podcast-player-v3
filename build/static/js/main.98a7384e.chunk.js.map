{"version":3,"sources":["stores/types.js","stores/reducers/reducer_index.js","stores/reducers/reducer_now-playing.js","stores/stores.js","components/Button/index.js","components/Header/index.js","components/Title/index.js","components/TextInput/index.js","components/Content/index.js","components/Image/index.js","components/Modal/index.js","containers/ComponentList/index.js","components/PodcastItem/index.js","containers/Podcasts/index.js","components/Episode/index.js","containers/Episode/index.js","stores/actions/action_set-now-playing.js","components/Loader/index.js","utils/constants.js","containers/EpisodeList/index.js","utils/rss.js","components/Player/duration.js","components/Player/index.js","containers/Player/index.js","App.js","index.js"],"names":["rootReducer","combineReducers","nowPlaying","state","action","type","types","payload","createStore","appState","window","__REDUX_DEVTOOLS_EXTENSION__","Button","props","buttonText","className","onClick","btnClass","defaultProps","Header","history","useHistory","goBack","Title","Tag","tag","text","classname","TextInput","isHidden","placeholder","inputClass","id","label","labelClass","value","isDisabled","onChange","inputClasses","labelClasses","htmlFor","name","disabled","Content","content","componentClass","dangerouslySetInnerHTML","__html","Image","url","alt","classes","src","ReactModal","setAppElement","Modal","useState","isOpen","setModalOpen","buttonClass","overlayClassName","children","ComponentList","to","isLink","linkRoute","console","log","PodcastItem","imageUrl","route","podcastImageStyle","backgroundImage","aria-label","style","Podcasts","podcastData","map","item","key","Episode","episodeName","episodeDesc","podcastName","episodeDate","onPlayClick","infoContainerClasses","e","EpisodeContainer","episodeData","dispatcher","useDispatch","activeClass","useSelector","guid","title","thumbnail","description","pubDate","podcastTitle","mp3url","enclosure","link","Loader","isLoading","additionalClasses","position","REQUEST_PROXY","EpisodeList","useParams","episodes","setEpisodes","feedDetails","setFeedDetails","visibleEpisodes","setVisibleEpisodes","setIsLoading","useEffect","callback","feed","filter","podcast","parseInt","data","items","slice","axios","method","headers","then","response","catch","err","info","episode","Fragment","currentNoOfEps","length","nextSetOfEpisodes","completeNewListOfEpisodes","concat","Duration","seconds","pad","string","dateTime","Math","round","secondsData","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","format","Player","playing","isPlaying","setIsPlaying","isSeeking","setIsSeeking","durationTime","setDurationTime","playedTime","setPlayedTime","showLoader","setShowLoader","playerElem","useRef","handleSeekMouseDown","handleSeekMouseUp","event","current","seekTo","parseFloat","target","min","max","step","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","ref","controls","file","width","height","onProgress","played","onDuration","duration","onReady","PlayerContainer","currentTrackData","isStartPlaying","Object","keys","constructor","App","styleClass","exact","path","store","ReactDOM","render","document","getElementById","navigator","swUrl","process","addEventListener","serviceWorker","register"],"mappings":"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","file":"static/js/main.98a7384e.chunk.js","sourcesContent":["const NOW_PLAYING = 'NOW_PLAYING';\n\nexport default {\n  NOW_PLAYING\n};\n","import { combineReducers } from 'redux';\nimport { nowPlaying } from './reducer_now-playing';\n\nconst rootReducer = combineReducers({\n  nowPlaying\n});\n\nexport default rootReducer;\n","import types from '../types';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const nowPlaying = (state = {}, action) => {\n  if (action.type === types.NOW_PLAYING) {\n    return action.payload;\n  }\n\n  return state;\n};\n","import { createStore } from 'redux';\nimport appState from './reducers/reducer_index';\n\nexport default createStore(\n  appState,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = props => {\n  const { buttonText, className, onClick } = props;\n\n  const btnClass = `Button ${className}`;\n\n  return (\n    <button type=\"button\" className={btnClass} onClick={onClick}>\n      {buttonText}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  buttonText: PropTypes.string,\n  className: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nButton.defaultProps = {\n  buttonText: null,\n  className: null,\n  onClick: () => null\n};\n\nexport default Button;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../Button';\n\nconst Header = () => {\n  const history = useHistory();\n\n  const backBtnHandler = () => {\n    history.goBack();\n  };\n\n  return (\n    <div className=\"Header\">\n      <div className=\"Header__left\">\n        <Button onClick={backBtnHandler} buttonText=\"Back\" />\n      </div>\n      <div className=\"Header__center\">\n        <h4>Podcasts</h4>\n      </div>\n      <div className=\"Header__right\">\n        <span className=\"\">v0.1.1</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = props => {\n  const { tag: Tag, text, classname } = props;\n\n  return <Tag className={classname}>{text}</Tag>;\n};\n\nTitle.propTypes = {\n  tag: PropTypes.string,\n  text: PropTypes.string,\n  classname: PropTypes.string\n};\n\nTitle.defaultProps = {\n  tag: 'h1',\n  text: null,\n  classname: null\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInput = props => {\n  const {\n    isHidden,\n    placeholder,\n    inputClass,\n    id,\n    label,\n    labelClass,\n    value,\n    isDisabled,\n    onChange\n  } = props;\n\n  const type = isHidden ? 'hidden' : 'text';\n  const inputClasses = `Input__input ${inputClass}`;\n  const labelClasses = `Input__label ${labelClass}`;\n\n  return (\n    <div className=\"Input\">\n      {label && (\n        <label htmlFor={id} className={labelClasses}>\n          {label}\n        </label>\n      )}\n      <input\n        id={id}\n        type={type}\n        name={id}\n        placeholder={placeholder}\n        className={inputClasses}\n        value={value}\n        disabled={isDisabled}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  isHidden: PropTypes.bool,\n  placeholder: PropTypes.string,\n  inputClass: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  labelClass: PropTypes.string,\n  value: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  onChange: PropTypes.func\n};\n\nTextInput.defaultProps = {\n  isHidden: false,\n  placeholder: null,\n  inputClass: null,\n  id: null,\n  label: null,\n  labelClass: null,\n  value: '',\n  isDisabled: false,\n  onChange: () => null\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Content = props => {\n  const { content, className } = props;\n\n  const componentClass = className ? `Content ${className}` : 'Content';\n\n  return (\n    <div\n      className={componentClass}\n      // eslint-disable-next-line\n      dangerouslySetInnerHTML={{ __html: content }}\n    />\n  );\n};\n\nContent.propTypes = {\n  content: PropTypes.string,\n  className: PropTypes.string\n};\n\nContent.defaultProps = {\n  content: null,\n  className: null\n};\n\nexport default Content;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Image = props => {\n  const { url, className, alt } = props;\n\n  const classes = `image ${className}`;\n\n  return (\n    <figure className={classes}>\n      <img src={url} alt={alt} />\n    </figure>\n  );\n};\n\nImage.propTypes = {\n  url: PropTypes.string,\n  className: PropTypes.string,\n  alt: PropTypes.string\n};\n\nImage.defaultProps = {\n  url: null,\n  className: null,\n  alt: null\n};\n\nexport default Image;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactModal from 'react-modal';\nimport Button from '../Button';\n\nReactModal.setAppElement('#root');\n\nconst Modal = props => {\n  const [isOpen, setModalOpen] = useState(false);\n\n  const { buttonText, buttonClass } = props;\n\n  return (\n    <>\n      <Button\n        className={buttonClass}\n        buttonText={buttonText}\n        onClick={() => {\n          setModalOpen(true);\n        }}\n      />\n\n      <ReactModal\n        className=\"Modal\"\n        overlayClassName=\"Modal__overlay\"\n        isOpen={isOpen}\n      >\n        <Button\n          className=\"Button--icon Button--icon-x Modal__close-btn\"\n          onClick={() => {\n            setModalOpen(false);\n          }}\n        />\n        <div>{props.children}</div>\n      </ReactModal>\n    </>\n  );\n};\n\nModal.propTypes = {\n  buttonText: PropTypes.string,\n  buttonClass: PropTypes.string\n};\n\nModal.defaultProps = {\n  buttonText: null,\n  buttonClass: null\n};\n\nexport default Modal;\n","import React from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport { BrowserRouter, Link } from 'react-router-dom';\n\nimport Title from '../../components/Title';\nimport TextInput from '../../components/TextInput';\nimport Content from '../../components/Content';\nimport Button from '../../components/Button';\nimport Image from '../../components/Image';\nimport Modal from '../../components/Modal';\n\nconst ComponentList = () => {\n  const htmlContent = `<div class=\"abc\">\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod, nunc et volutpat malesuada, enim mi venenatis turpis, nec porta velit ipsum in urna. Vestibulum sed diam dictum, consectetur lorem eu, fermentum felis. Etiam vitae iaculis est, non auctor ipsum. Nunc ante erat, finibus et mollis sit amet, aliquam a nisl. </p>\n                        <p><a href=\"/\">Donec gravida</a> lorem condimentum suscipit dapibus. Donec congue pretium imperdiet.</p>\n                        <p>Donec pellentesque, dolor ut tristique ultrices, nisl nunc tristique lorem, quis tristique velit magna et neque. Suspendisse potenti. Quisque elit libero, congue vitae viverra eu, faucibus ut nunc.</p>\n                      </div>`;\n\n  return (\n    <div className=\"ComponentList\">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <Title text=\"Component List\" />\n          <Link className=\"button\" to=\"/\">\n            Click to go /\n          </Link>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <section className=\"ComponentList__section\">\n            <Title text=\"Title Component h2\" tag=\"h2\" />\n            <Title text=\"Title Component h3\" tag=\"h3\" />\n            <Title text=\"Title Component h4\" tag=\"h4\" />\n          </section>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <section className=\"ComponentList__section\">\n            <Title text=\"TextInput\" tag=\"h2\" />\n            <TextInput\n              name=\"forename\"\n              placeholder=\"Enter here...\"\n              id=\"forename-id\"\n              labelClass=\"Input__label-custom\"\n              label=\"First name\"\n              inputClass=\"Input__custom\"\n            />\n            <TextInput id=\"orderId\" name=\"orderId\" isHidden />\n          </section>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <section className=\"ComponentList__section\">\n            <Title text=\"Content Component\" tag=\"h2\" />\n            <Content content={htmlContent} className=\"custom-class-here\" />\n          </section>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <section className=\"ComponentList__section\">\n            <Title text=\"Button Component\" tag=\"h2\" />\n            <Button\n              isLink\n              buttonText=\"Go to / (Primary)\"\n              className=\"is-primary\"\n              linkRoute=\"/\"\n            />\n\n            <Button buttonText=\"Regular\" />\n\n            <Button className=\"Button--icon Button--icon-play\" />\n\n            <Button buttonText=\"Text button\" className=\"is-text\" />\n\n            <Button\n              buttonText=\"Info\"\n              className=\"is-info\"\n              onClick={() => console.log('this is a button')} // eslint-disable-line no-console\n            />\n\n            <Button buttonText=\"success\" className=\"is-success\" />\n\n            <Button buttonText=\"warning\" className=\"is-warning\" />\n\n            <Button buttonText=\"danger\" className=\"is-danger\" />\n          </section>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <section className=\"ComponentList__section\">\n            <Title text=\"Image Component\" tag=\"h2\" />\n            <Image\n              alt=\"Picture here\"\n              url=\"https://cdn.friendsoftheearth.uk/sites/default/files/styles/media_with_text_image/public/media/images/forest-sky_0.jpg\"\n            />\n          </section>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <section className=\"ComponentList__section\">\n            <Title text=\"ReactModal Component\" tag=\"h2\" />\n            <Modal buttonClass=\"Button is-primary\" buttonText=\"Open modal 1\">\n              <h2>Opened Modal 1</h2>\n              <p>\n                This is a test. Lorem ipsum dolor sit amet, consectetur\n                adipiscing elit. Mauris a semper orci. Nunc accumsan luctus\n                lacus id lacinia. Cras finibus mattis lacus ut blandit. Cras\n                fermentum turpis vitae augue vehicula scelerisque. Morbi sed\n                rhoncus quam. Morbi a imperdiet sapien. Quisque pulvinar eros\n                sit amet pellentesque pretium.\n              </p>\n            </Modal>\n            <Modal buttonClass=\"Button Button--icon Button--icon-menu\">\n              <h2>Opened Modal 2</h2>\n              <p>This is a test for modal 2</p>\n            </Modal>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComponentList;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PodcastItem = props => {\n  const { imageUrl, name, id } = props;\n  const route = `/episodes/${id}`;\n  const podcastImageStyle = { backgroundImage: `url(${imageUrl})` };\n  const classes = `PodcastItem${\n    !imageUrl ? ' PodcastItem--no-image' : ' PodcastItem--image'\n  }`;\n\n  return (\n    <div className={classes}>\n      <Link to={route}>\n        {imageUrl && (\n          <div\n            className=\"PodcastItem__image\"\n            aria-label={name}\n            style={podcastImageStyle}\n          />\n        )}\n\n        {!imageUrl && (\n          <div className=\"PodcastItem__text-wrapper\">\n            {!imageUrl && <div className=\"PodcastItem__text\">{name}</div>}\n          </div>\n        )}\n      </Link>\n    </div>\n  );\n};\n\nPodcastItem.propTypes = {\n  imageUrl: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.number\n};\n\nPodcastItem.defaultProps = {\n  imageUrl: null,\n  name: null,\n  id: null\n};\n\nexport default PodcastItem;\n","import React from 'react';\nimport PodcastItem from '../../components/PodcastItem';\n\nimport podcastData from '../../data/podcasts.json'; // Stub data\n\nconst Podcasts = () => {  \n  return (\n    <div className=\"Podcasts\">\n      {podcastData.map(item => {\n        return (\n          <PodcastItem\n            id={item.id}\n            name={item.name}\n            imageUrl={item.imageUrl || null}\n            key={item.id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Podcasts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport Modal from '../Modal';\n\nconst Episode = props => {\n  const {\n    className,\n    imageUrl,\n    episodeName,\n    episodeDesc,\n    podcastName,\n    episodeDate,\n    onPlayClick\n  } = props;\n\n  const classes = `Episode ${className}`;\n\n  const backgroundImage = { backgroundImage: `url(${imageUrl})` };\n  const playHandler = e => {\n    onPlayClick(e, props);\n  };\n\n  const infoContainerClasses = imageUrl\n    ? 'Episode__info-container'\n    : 'Episode__info-container Episode__info-container--no-padding';\n\n  return (\n    <div className={classes}>\n      <div className=\"Episode__name\">{episodeName}</div>\n      <div className=\"Episode__bottom\">\n        {imageUrl && <div className=\"Episode__image\" style={backgroundImage} />}\n        <div className={infoContainerClasses}>\n          <div className=\"Episode__podcast\">{podcastName}</div>\n          <div className=\"Episode__pub-date\">{episodeDate}</div>\n          <div className=\"Episode__controls\">\n            <Button\n              className=\"Button--icon Button--icon-play Episode__control-button\"\n              onClick={playHandler}\n            />\n            <Modal buttonClass=\"Button--icon Button--icon-info Episode__control-button\">\n              <h3>{episodeName}</h3>\n              <div>{episodeDesc}</div>\n            </Modal>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEpisode.propTypes = {\n  className: PropTypes.string,\n  imageUrl: PropTypes.string,\n  episodeName: PropTypes.string,\n  episodeDesc: PropTypes.string,\n  podcastName: PropTypes.string,\n  episodeDate: PropTypes.string,\n  onPlayClick: PropTypes.func\n};\n\nEpisode.defaultProps = {\n  className: null,\n  imageUrl: null,\n  episodeName: null,\n  episodeDesc: null,\n  podcastName: '-',\n  episodeDate: null,\n  onPlayClick: () => {}\n};\n\nexport default Episode;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport setNowPlaying from '../../stores/actions/action_set-now-playing';\nimport Episode from '../../components/Episode';\n\nconst EpisodeContainer = props => {\n  const { episodeData } = props;\n  const dispatcher = useDispatch();\n\n  const nowPlayingData = useSelector(state => state.nowPlaying);\n\n  const playHandler = () => {\n    dispatcher(setNowPlaying(episodeData));\n  };\n\n  const activeClass =\n    nowPlayingData.guid === episodeData.guid ? 'Episode__now-playing' : '';\n\n  return (\n    <Episode\n      className={activeClass}\n      episodeName={episodeData.title}\n      imageUrl={episodeData.thumbnail}\n      episodeDesc={episodeData.description}\n      episodeDate={episodeData.pubDate}\n      podcastName={episodeData.podcastTitle}\n      mp3url={episodeData.enclosure.link}\n      onPlayClick={playHandler}\n    />\n  );\n};\n\nEpisodeContainer.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  episodeData: PropTypes.object\n};\n\nEpisodeContainer.defaultProps = {\n  episodeData: {}\n};\n\nexport default EpisodeContainer;\n","import types from '../types';\n\n/**\n * Sets current playing track\n *\n * Sample:\n  {\n    title: '-',\n    url: '-',\n    author: '-',\n    mp3url: '-',\n    guid: ''\n  }\n */\n\nexport default data => {\n  return {\n    type: types.NOW_PLAYING,\n    payload: data\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loader = props => {\n  const { isLoading, additionalClasses, position } = props;\n\n  const classes = `Loader${isLoading ? ' Loader--active' : ''}${\n    position === 'absolute' ? ' Loader--absolute' : ''\n  } ${additionalClasses || ''}`;\n\n  return (\n    <div className={classes}>\n      <div className=\"Loader__swirly\" />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool,\n  additionalClasses: PropTypes.string,\n  position: PropTypes.string\n};\n\nLoader.defaultProps = {\n  isLoading: false,\n  additionalClasses: null,\n  position: null\n};\n\nexport default Loader;\n","const API_KEY = '8cshrtbmkesdg20vexfenpitkveulnxyeiiimxsc';\nconst NO_OF_ITEMS = 1000;\nexport const REQUEST_PROXY = `https://api.rss2json.com/v1/api.json?&api_key=${API_KEY}&count=${NO_OF_ITEMS}&rss_url=`;\nexport const INIT_NO_OF_EPISODES_TO_SHOW = 25;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport Button from '../../components/Button';\nimport EpisodeContainer from '../Episode';\nimport Loader from '../../components/Loader';\nimport getPodcastEpisodes from '../../utils/rss';\nimport { INIT_NO_OF_EPISODES_TO_SHOW } from '../../utils/constants';\n\nimport podcastData from '../../data/podcasts.json'; // Stub data\n\nconst EpisodeList = () => {\n  const { id } = useParams();\n\n  const [episodes, setEpisodes] = useState([]);\n  const [feedDetails, setFeedDetails] = useState({});\n  const [visibleEpisodes, setVisibleEpisodes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const feed = podcastData.filter(podcast => podcast.id === parseInt(id, 10));\n\n    getPodcastEpisodes(feed[0].url, data => {\n      setIsLoading(false);\n      setFeedDetails(data.feed);\n      setEpisodes(data.items);\n      setVisibleEpisodes(data.items.slice(0, INIT_NO_OF_EPISODES_TO_SHOW));\n    });\n  }, [id]);\n\n  const loadMoreEpisodes = () => {\n    const currentNoOfEps = visibleEpisodes.length;\n    const nextSetOfEpisodes = episodes.slice(\n      currentNoOfEps,\n      currentNoOfEps + INIT_NO_OF_EPISODES_TO_SHOW\n    );\n    const completeNewListOfEpisodes = visibleEpisodes.concat(nextSetOfEpisodes);\n    setVisibleEpisodes(completeNewListOfEpisodes);\n  };\n\n  return (\n    <div className=\"EpisodeList\">\n      {visibleEpisodes.map(episode => {\n        const epData = episode;\n        epData.podcastTitle = feedDetails.title;\n\n        return (\n          <React.Fragment key={episode.guid}>\n            <EpisodeContainer episodeData={episode} />\n            <hr />\n          </React.Fragment>\n        );\n      })}\n      <div className=\"EpisodeList__load-more\">\n        <Button\n          className=\"EpisodeList__load-more-button Button--primary\"\n          onClick={loadMoreEpisodes}\n          buttonText=\"Load more epsiodes...\"\n        />\n      </div>\n\n      <Loader isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport default EpisodeList;\n","import axios from 'axios';\nimport { REQUEST_PROXY } from './constants';\n\nexport default (url, callback) => {\n  axios({\n    method: 'get',\n    url: `${REQUEST_PROXY}${url}`,\n    headers: {\n      'Cache-Control': 'public, max-age=10'\n    }\n  })\n    .then(response => {\n      callback(response.data);\n    })\n    .catch(err => {\n      console.info(err);\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Duration = props => {\n  const { className, seconds } = props;\n\n  const pad = string => {\n    return `0${string}`.slice(-2);\n  };\n\n  const format = secondsData => {\n    const date = new Date(secondsData * 1000);\n    const hh = date.getUTCHours();\n    const mm = date.getUTCMinutes();\n    const ss = pad(date.getUTCSeconds());\n    if (hh) {\n      return `${hh}:${pad(mm)}:${ss}`;\n    }\n    return `${mm}:${ss}`;\n  };\n\n  return (\n    <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n      {format(seconds)}\n    </time>\n  );\n};\n\nDuration.propTypes = {\n  className: PropTypes.string,\n  seconds: PropTypes.number\n};\n\nDuration.defaultProps = {\n  className: null,\n  seconds: null\n};\n\nexport default Duration;\n","import React, { useState, useRef, useEffect } from 'react';\nimport ReactPlayer from 'react-player/lazy';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport Duration from './duration';\nimport Loader from '../Loader';\n\nconst Player = props => {\n  const { url, playing, title, podcastTitle } = props;\n  const [isPlaying, setIsPlaying] = useState(playing);\n  const [isSeeking, setIsSeeking] = useState(false);\n  const [durationTime, setDurationTime] = useState(0);\n  const [playedTime, setPlayedTime] = useState(0);\n  const [showLoader, setShowLoader] = useState(true);\n  const playerElem = useRef(null);\n\n  useEffect(() => {\n    setShowLoader(true);\n  }, [url]);\n\n  const handleProgress = state => {\n    // We only want to update time slider if we are not currently seeking\n    if (!isSeeking) {\n      setPlayedTime(state.played);\n    }\n  };\n\n  const handleDuration = duration => {\n    setDurationTime(duration);\n  };\n\n  const handleSeekMouseDown = () => {\n    setIsSeeking(true);\n  };\n\n  const handleSeekChange = event => {\n    setPlayedTime(parseFloat(event.target.value));\n  };\n\n  const handleSeekMouseUp = event => {\n    setIsSeeking(false);\n    playerElem.current.seekTo(parseFloat(event.target.value));\n  };\n\n  const handleReady = () => {\n    setShowLoader(false);\n    setIsPlaying(true);\n  };\n\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <div className=\"Player\">\n      <Loader isLoading={showLoader} position=\"absolute\" />\n      <div className=\"Player__title\">\n        <h3 className=\"Player__title-podcast\">{podcastTitle}</h3>\n        <h2 className=\"Player__title-track\">{title}</h2>\n      </div>\n      <input\n        type=\"range\"\n        className=\"Player__seekbar\"\n        min={0}\n        max={0.999999}\n        step=\"any\"\n        value={playedTime}\n        onMouseDown={handleSeekMouseDown}\n        onChange={handleSeekChange}\n        onMouseUp={handleSeekMouseUp}\n        onTouchStart={handleSeekMouseDown}\n        onTouchEnd={handleSeekMouseUp}\n      />\n      <div className=\"Player__controls\">\n        <Duration seconds={durationTime * playedTime} />\n        <Button\n          className={`Button--icon Player__controls-play-pause ${\n            isPlaying ? 'Button--icon-pause' : 'Button--icon-play'\n          }`}\n          onClick={handlePlayPause}\n        />\n      </div>\n      <ReactPlayer\n        url={url}\n        ref={playerElem}\n        id=\"podcastPlayer\"\n        className=\"Player__react-player\"\n        controls\n        file=\"forceAudio\"\n        width=\"100%\"\n        height=\"100%\"\n        playing={isPlaying}\n        onProgress={handleProgress}\n        onDuration={handleDuration}\n        onReady={handleReady}\n      />\n    </div>\n  );\n};\n\nPlayer.propTypes = {\n  url: PropTypes.string,\n  playing: PropTypes.bool,\n  title: PropTypes.string,\n  podcastTitle: PropTypes.string\n};\n\nPlayer.defaultProps = {\n  url: null,\n  playing: false,\n  title: null,\n  podcastTitle: null\n};\n\nexport default Player;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Player from '../../components/Player';\n\nconst PlayerContainer = () => {\n  const currentTrackData = useSelector(state => state.nowPlaying);\n  const isStartPlaying = !!currentTrackData;\n\n  return (\n    <>\n      {Object.keys(currentTrackData).length !== 0 &&\n        currentTrackData.constructor === Object && (\n          <Player\n            playing={isStartPlaying}\n            url={currentTrackData.enclosure.link}\n            title={currentTrackData.title}\n            podcastTitle={currentTrackData.podcastTitle}\n          />\n        )}\n    </>\n  );\n};\n\nexport default PlayerContainer;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Header from './components/Header';\nimport ComponentList from './containers/ComponentList';\nimport Podcasts from './containers/Podcasts';\nimport EpisodeList from './containers/EpisodeList';\nimport PlayerContainer from './containers/Player';\n\nconst App = () => {\n  const currentTrackData = useSelector(state => state.nowPlaying);\n  const styleClass =\n    currentTrackData !== {} ? 'App App--player-visible' : 'App';\n\n  return (\n    <div className={styleClass}>\n      <Router>\n        <Header />\n        <Route exact path=\"/\">\n          <Podcasts />\n        </Route>\n        <Route exact path=\"/all-components\">\n          <ComponentList />\n        </Route>\n        <Switch>\n          <Route path=\"/episodes/:id\">\n            <EpisodeList />\n          </Route>\n        </Switch>\n      </Router>\n\n      <PlayerContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './stores/stores';\nimport './index.scss';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\n// For development, give easy access to see whats in the state store without redux devtool\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nif ('serviceWorker' in navigator) {\n  const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n\n  // Use the window load event to keep the page load performant\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register(swUrl);\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// GET THIS WORKING IN DEVELOPMENT MODE: https://www.freecodecamp.org/news/how-to-customize-service-workers-with-create-react-app-4424dda6210c/\n// serviceWorker.register();\n"],"sourceRoot":""}